@using Simtek.Application.Commands
@using Simtek.Domain
@attribute [StreamRendering]

@inject IMediator _mediator

<EditForm Model="customer" OnValidSubmit="HandleSubmit" FormName="create-customer" Enhance>
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label for="name">Nome</label>
        <InputText id="name" class="form-control" @bind-Value="customer.Name"></InputText>
        <ValidationMessage For="() => customer.Name"/>
    </div>
    <div class="form-group">
        <label for="surname">Cognome</label>
        <InputText id="surname" class="form-control" @bind-Value="customer.Surname"></InputText>
        <ValidationMessage For="() => customer.Surname" class="text-danger"/>
    </div>
    <div class="form-group">
        <label for="address">Indirizzo</label>
        <InputText id="address" class="form-control" @bind-Value="customer.Address"></InputText>
        <ValidationMessage For="() => customer.Address" class="text-danger"/>
    </div>
    <div class="form-group">
        <label for="city">Citt√†</label>
        <InputText id="city" class="form-control" @bind-Value="customer.City"></InputText>
        <ValidationMessage For="() => customer.City" class="text-danger"/>
    </div>
    <div class="form-group">
        <label for="cap">CAP</label>
        <InputText id="cap" class="form-control" @bind-Value="customer.Zip"></InputText>
        <ValidationMessage For="() => customer.Zip" class="text-danger"/>
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="customer.Email"></InputText>
        <ValidationMessage For="() => customer.Email" class="text-danger"/>
    </div>
    <div class="form-group">
        <label for="phone">Telefono</label>
        <InputText id="phone" class="form-control" @bind-Value="customer.Phone"></InputText>
        <ValidationMessage For="() => customer.Phone" class="text-danger"/>
    </div>
    <div class="form-group">
        <label for="vat">Partita IVA</label>
        <InputText id="vat" class="form-control" @bind-Value="customer.Vat"></InputText>
        <ValidationMessage For="() => customer.Vat" class="text-danger"/>
    </div>
    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code {
    [Parameter] public Customer customer { get; set; }
    [Parameter] public EventCallback OnSubmit { get; set; }

    private async Task HandleSubmit()
    {
        var result = await _mediator.Send(new CreateCustomerCommand() { Customer = customer });
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync(result);
        }
    }
}