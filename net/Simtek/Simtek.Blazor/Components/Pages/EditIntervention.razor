@page "/EditIntervention/{Id:int}"
@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using Microsoft.AspNetCore.Mvc
@using Simtek.Application.Commands
@using Simtek.Blazor.Components.Reusables
@using Simtek.Domain
@inject ILogger<EditIntervention> _logger
@inject IMediator _mediator
@inject NavigationManager NavigationManager

<h3>Modifica Intervento</h3>

<InterventionForm Intervention="Intervention" OnSubmit="HandleSubmit"/>
@code {
    [Parameter]
    public int Id { get; set; }
    public Intervention Intervention { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var getOperation = await _mediator.Send(new GetInterventionQuery() { Id = Id });
        getOperation.When(
            onSuccess: i => Intervention = i,
            onFailure: e => _logger.LogError(e, "Error while getting intervention")
        );
    }

    private async Task HandleSubmit(Intervention arg)
    {
        var operationResult = await _mediator.Send(new CreateInterventionCommand(){Intervention = arg});
        operationResult.When(
            onSuccess: x => NavigationManager.NavigateTo($"/customers"),
            onFailure: e => _logger.LogError(e, "Error while updating intervention")
        );
    }

}