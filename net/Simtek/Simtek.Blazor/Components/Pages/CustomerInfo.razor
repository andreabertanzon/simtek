@page "/CustomerInfo/{Id:int}"
@using Simtek.Domain
@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IMediator _mediator
@inject NavigationManager NavigationManager

<h3 class="mb-4">@Customer?.FullName</h3>

<div>
    <table class="table">
        <tr class="py-2">
            <th scope="row">Nome</th>
            <td>@Customer?.Name</td>
        </tr>
        <tr>
            <th scope="row">Cognome</th>
            <td>@Customer?.Surname</td>
        </tr>
        <tr>
            <th scope="row">Indirizzo</th>
            <td>@Customer?.Address</td>
        </tr>
        <tr>
            <th scope="row">Città</th>
            <td>@Customer?.City</td>
        </tr>
        <tr>
            <th scope="row">CAP</th>
            <td>@Customer?.Zip</td>
        </tr>
        <tr>
            <th scope="row">Email</th>
            <td>@Customer?.Email</td>
        </tr>
        <tr>
            <th scope="row">Telefono</th>
            <td>@Customer?.Phone</td>
        </tr>
        <tr>
            <th scope="row">Partita IVA</th>
            <td>@Customer?.Vat</td>
        </tr>
    </table>
</div>
@if (Customer?.Sites.Any() ?? false)
{
    <h3 class="mt-5">Cantieri</h3>
    <div>
        <table class="table table-hover">
            <thead>
            <tr>
                <th>Nome</th>
                <th>Indirizzo</th>
                <th>Città</th>
                <th>CAP</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var site in Customer?.Sites ?? [])
            {
                <tr>
                    <td>@site.Name</td>
                    <td>@site.Address</td>
                    <td>@site.City</td>
                    <td>@site.ZipCode</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
<button class="btn btn-primary" @onclick="() =>AddSite(-1)"><i class="bi bi-journal-plus"></i> Aggiungi Cantiere</button>

<h3 class="my-5">Interventi Aperti</h3>

@code {
    [Parameter] public int Id { get; set; }
    Customer? Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var getCustomerOperation = await _mediator.Send(new GetCustomerQuery() { Id = Id });
        getCustomerOperation.When(
            onSuccess: c => Customer = c,
            onFailure: e => Console.WriteLine(e)
        );
    }

    private async Task AddSite(int i)
    {
        if (Customer != null) NavigationManager.NavigateTo($"/EditSite/{Customer.Id}/{i}");
    }

}